
 一个源程序在编译时主要由三个步骤：
	
 1.预处理：展开头文件，替换宏，条件编译，删除注释
 2.编译：检查语义语法错误，生成汇编代码
 3.汇编：将生成的汇编代码转换为二进制的机器代码
 4.链接：将多个源文件合在一起

 链接分为静态链接和动态链接
 
 静态链接是在形成可执行程序之前
 动态链接是在程序运行时进行链接

 静态链接：在实际开发中，我们不可能将所有代码都放进一个源文件，而是有多个源文件，每个源文件中的一个函数可能对其他源文件中的函数有依赖关系，每个源文件的.C文件会生成一个.O文件，为了满足上述的依赖关系，就需要将生成的这些目标文件链接起来，从而形成一个可执行程序。

 由很多目标文件链接形成的就是静态库，反之静态库就是一堆目标文件的集合，即很多目标文件经过压缩打包形成的一个文件
 由于运行库中有成百上千个函数，数量非常庞大，将每个函数独立的存放在一个目标文件中，可以很大的减少空间的浪费。

 静态链接的缺点：1.浪费空间，如果有多个程序对一个目标文件有依赖关系，则会                 产生多个对这个目标文件的副本。
		 2.更新困难，每更新一次目标文件，就需要重新进行一次编译链接。
 
 静态链接的优点：由于在程序已经具备在运行时所需要的所有东西，因此执行时运行速度快。

 动态链接：将程序按照模块拆分成多个相对应的独立部分，在程序运行时将它们链接成一个完整的程序。而不是像静态链接一样将所有程序模块链接成一个单独的可执行程序。
 动态链接的优点：即使多个程序依赖于一个库，也不会像静态链接一样产生多个副本，而是多个程序共享一个副本
		 更新方便，更新时只需替换原来的目标文件，而无需再将所有程序再链接一次。在程序下一次运行时，新版本的目标文件会被加入到内存中链接起来，程序就完成了升级
 
 动态链接的缺点：因为每次运行时都需要链接，因此性能会有一些丢失。